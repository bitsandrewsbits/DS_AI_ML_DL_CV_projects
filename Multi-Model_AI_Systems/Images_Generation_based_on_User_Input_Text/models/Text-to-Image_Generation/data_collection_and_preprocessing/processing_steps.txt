In this file I will write every step for data downloading, processing. Maybe it's will be useful for auto-deployment.

IMPORTANT:As we will use pre-trained Text-to-Image model, we use only validation2017_for_fine-tune dataset and annotations for
Stable Diffusion model fine-tuning.

pwd - ../data

#1)Create 2 dirs - validation2017_for_fine-tune/images, validation2017_for_fine-tune/annotations:
mkdir -p validation2017_for_fine-tune/images validation2017_for_fine-tune/annotations

#2)install axel util for downloading files.
sudo apt install axel

#3)download files via axel(2 files - val2017.zip, 2017.zip):
axel -o validation2017_for_fine-tune/val2017.zip http://images.cocodataset.org/zips/val2017.zip
axel -o validation2017_for_fine-tune/annotations_trainval2017.zip http://images.cocodataset.org/annotations/annotations_trainval2017.zip

#4) unzip files with respect to their dirs:
unzip -q validation2017_for_fine-tune/val2017.zip -d validation2017_for_fine-tune/images
unzip -q validation2017_for_fine-tune/annotations_trainval2017.zip -d validation2017_for_fine-tune

#5)move images from val2017 to images dir, remove empty val2017:
mv validation2017_for_fine-tune/images/val2017/* validation2017_for_fine-tune/images
rm -d validation2017_for_fine-tune/images/val2017

#6)remove train2017 annotation files from annotation dir:
rm validation2017_for_fine-tune/annotations/*train2017.json

# Create project VENV(pwd - ../data) and libs for cocoAPI:
1)cd to project root dir: cd ../../../../
2)#1)create Project venv in project root dir - images_gen-tion_user_input-env:
  python3 -m venv "images_gen-tion_user_input-env"
  #2)activate venv: source images_gen-tion_user_input-env/bin/activate
  #3)pip install numpy==1.26(!)
  #4)pip install scikit-image
  #5)pip install matplotlib

# Installing COCO PythonAPI:
1)cd to project COCO API path - ../data_collection_and_preprocessing
2)pip3 install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI
3)cp -r /home/kov_andrew/.local/lib/python3.10/site-packages/pycocotools .
